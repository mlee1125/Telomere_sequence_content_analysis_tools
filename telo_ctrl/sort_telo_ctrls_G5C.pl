#!/usr/bin/perl -w
use strict;
use warnings;

my $num_args = $#ARGV + 1;
if($num_args != 1){
    print STDERR "\nUsage: sort_telo_ctrls.pl <fastq>\n";
    exit;
}

my $input_file = $ARGV[0];
unless($input_file =~ /^(.*)\.(?:fastq|fq)$/){
    print STDERR "\nUsage: sort_telo_ctrls.pl <fastq>\n";
    exit;
}
my $file_prefix = $1;

my $out_file_pure_G = "$file_prefix.G-strands.fastq";
my $out_file_pure_C = "$file_prefix.C-strands.fastq";
my $out_file_mixed = "$file_prefix.mixed-strands.fastq";
my $out_file_other = "$file_prefix.others.fastq";

open(INPUT, "<", $input_file) or die "Cannot open < $input_file: $!\n";

open(OUT_G, ">", $out_file_pure_G) or die "Cannot open > $out_file_pure_G: $!\n";
open(OUT_C, ">", $out_file_pure_C) or die "Cannot open > $out_file_pure_C: $!\n";
open(OUT_mix, ">", $out_file_mixed) or die "Cannot open > $out_file_mixed: $!\n";
open(OUT_other, ">", $out_file_other) or die "Cannot open > $out_file_other: $!\n";

my $id = "";
my $seq = "";
my $qual = "";

while(my $line = <INPUT>){
	unless($line =~ /^@.*/){
		print STDERR "Error: File not in fastq format, header incorrect!\n";
		exit;
	}
	$id = $line;
	
	$seq = <INPUT>;
	unless($seq =~ /^[ACGTN]+$/){
		print STDERR "Error: File not in fastq format, seq incorrect!\n";
		exit;
	}
	
	$line = <INPUT>;
	unless($line =~ /^\+$/){
		print STDERR "Error: File not in fastq format, missing +!\n";
		exit;
	}
	$qual = <INPUT>;
	unless($qual =~ /^[!-N]+$/){
		print STDERR "Error: File not in fastq format, qual incorrect!\n";
		exit;
	}
	
	if($seq =~ /^[ACGT]{0,5}(?:TTAGCG|ATAGCG|CTAGCG|GTAGCG|TAAGCG|TCAGCG|TGAGCG|TTCGCG|TTGGCG|TTTGCG|TTAACG|TTACCG|TTATCG|TTAGAG|TTAGGG|TTAGTG|TTAGCA|TTAGCC|TTAGCT)+[ACGT]{0,5}$/){
		print OUT_G $id;
		print OUT_G $seq;
		print OUT_G "+\n";
		print OUT_G $qual;
	}elsif($seq =~ /^[ACGT]{0,5}(?:CGCTAA|CGCTAT|CGCTAG|CGCTAC|CGCTTA|CGCTGA|CGCTCA|CGCGAA|CGCCAA|CGCAAA|CGTTAA|CGGTAA|CGATAA|CTCTAA|CCCTAA|CACTAA|TGCTAA|GGCTAA|AGCTAA)+[ACGT]{0,5}$/){
		print OUT_C $id;
		print OUT_C $seq;
		print OUT_C "+\n";
		print OUT_C $qual;
	}elsif($seq =~ /^[ACGT]{0,11}(?:(?:[ACGT](?:GCGTTA|GCGATA|GCGCTA|GCGGTA|GCGTAA|GCGTCA|GCGTGA|GCGTTC|GCGTTG|GCGTTT|ACGTTA|CCGTTA|TCGTTA|GAGTTA|GGGTTA|GTGTTA|GCATTA|GCCTTA|GCTTTA)(?:GCGTTA|GCGATA|GCGCTA|GCGGTA|GCGTAA|GCGTCA|GCGTGA|GCGTTC|GCGTTG|GCGTTT|ACGTTA|CCGTTA|TCGTTA|GAGTTA|GGGTTA|GTGTTA|GCATTA|GCCTTA|GCTTTA))|(?:(?:GCGTTA|GCGATA|GCGCTA|GCGGTA|GCGTAA|GCGTCA|GCGTGA|GCGTTC|GCGTTG|GCGTTT|ACGTTA|CCGTTA|TCGTTA|GAGTTA|GGGTTA|GTGTTA|GCATTA|GCCTTA|GCTTTA)(?:GCGTT|GCGAT|GCGCT|GCGGT|GCGTA|GCGTC|GCGTG|ACGTT|CCGTT|TCGTT|GAGTT|GGGTT|GTGTT|GCATT|GCCTT|GCTTT))|(?:(?:AACGC|TACGC|GACGC|CACGC|AACGC|AACGC|AACGC|AACGT|AACGG|AACGA|AACTC|AACCC|AACAC|AATGC|AAGGC|AAAGC)(?:TAACGC|TATCGC|TAGCGC|TACCGC|TTACGC|TGACGC|TCACGC|GAACGC|CAACGC|AAACGC|TAACGT|TAACGG|TAACGA|TAACTC|TAACCC|TAACAC|TAATGC|TAAGGC|TAAAGC))|(?:(?:TAACGC|TATCGC|TAGCGC|TACCGC|TTACGC|TGACGC|TCACGC|GAACGC|CAACGC|AAACGC|TAACGT|TAACGG|TAACGA|TAACTC|TAACCC|TAACAC|TAATGC|TAAGGC|TAAAGC)(?:TAACGC|TATCGC|TAGCGC|TACCGC|TTACGC|TGACGC|TCACGC|GAACGC|CAACGC|AAACGC|TAACGT|TAACGG|TAACGA|TAACTC|TAACCC|TAACAC|TAATGC|TAAGGC|TAAAGC)[ACGT]))+[ACGT]{0,11}$/){
		print OUT_mix $id;
		print OUT_mix $seq;
		print OUT_mix "+\n";
		print OUT_mix $qual;
	}else{
		print OUT_other $id;
		print OUT_other $seq;
		print OUT_other "+\n";
		print OUT_other $qual;
	}
}

#(?:TTAGCG|ATAGCG|CTAGCG|GTAGCG|TAAGCG|TCAGCG|TGAGCG|TTCGCG|TTGGCG|TTTGCG|TTAACG|TTACCG|TTATCG|TTAGAG|TTAGGG|TTAGTG|TTAGCA|TTAGCC|TTAGCT)
#(?:CGCTAA|CGCTAT|CGCTAG|CGCTAC|CGCTTA|CGCTGA|CGCTCA|CGCGAA|CGCCAA|CGCAAA|CGTTAA|CGGTAA|CGATAA|CTCTAA|CCCTAA|CACTAA|TGCTAA|GGCTAA|AGCTAA)

#(A(GGGTTA)(GGGTTA))|((GGGTTA)(GGGTT))|((AACCC)(TAACCC))|((TAACCC)(TAACCC)T)
#(?:GCGTTA|GCGATA|GCGCTA|GCGGTA|GCGTAA|GCGTCA|GCGTGA|GCGTTC|GCGTTG|GCGTTT|ACGTTA|CCGTTA|TCGTTA|GAGTTA|GGGTTA|GTGTTA|GCATTA|GCCTTA|GCTTTA)
#(?:GCGTT|GCGAT|GCGCT|GCGGT|GCGTA|GCGTC|GCGTG|ACGTT|CCGTT|TCGTT|GAGTT|GGGTT|GTGTT|GCATT|GCCTT|GCTTT)
#(?:TAACGC|TATCGC|TAGCGC|TACCGC|TTACGC|TGACGC|TCACGC|GAACGC|CAACGC|AAACGC|TAACGT|TAACGG|TAACGA|TAACTC|TAACCC|TAACAC|TAATGC|TAAGGC|TAAAGC)
#(?:AACGC|TACGC|GACGC|CACGC|AACGC|AACGC|AACGC|AACGT|AACGG|AACGA|AACTC|AACCC|AACAC|AATGC|AAGGC|AAAGC)
#(?:(?:[ACGT](?:GCGTTA|GCGATA|GCGCTA|GCGGTA|GCGTAA|GCGTCA|GCGTGA|GCGTTC|GCGTTG|GCGTTT|ACGTTA|CCGTTA|TCGTTA|GAGTTA|GGGTTA|GTGTTA|GCATTA|GCCTTA|GCTTTA)(?:GCGTTA|GCGATA|GCGCTA|GCGGTA|GCGTAA|GCGTCA|GCGTGA|GCGTTC|GCGTTG|GCGTTT|ACGTTA|CCGTTA|TCGTTA|GAGTTA|GGGTTA|GTGTTA|GCATTA|GCCTTA|GCTTTA))|(?:(?:GCGTTA|GCGATA|GCGCTA|GCGGTA|GCGTAA|GCGTCA|GCGTGA|GCGTTC|GCGTTG|GCGTTT|ACGTTA|CCGTTA|TCGTTA|GAGTTA|GGGTTA|GTGTTA|GCATTA|GCCTTA|GCTTTA)(?:GCGTT|GCGAT|GCGCT|GCGGT|GCGTA|GCGTC|GCGTG|ACGTT|CCGTT|TCGTT|GAGTT|GGGTT|GTGTT|GCATT|GCCTT|GCTTT))|(?:(?:AACGC|TACGC|GACGC|CACGC|AACGC|AACGC|AACGC|AACGT|AACGG|AACGA|AACTC|AACCC|AACAC|AATGC|AAGGC|AAAGC)(?:TAACGC|TATCGC|TAGCGC|TACCGC|TTACGC|TGACGC|TCACGC|GAACGC|CAACGC|AAACGC|TAACGT|TAACGG|TAACGA|TAACTC|TAACCC|TAACAC|TAATGC|TAAGGC|TAAAGC))|(?:(?:TAACGC|TATCGC|TAGCGC|TACCGC|TTACGC|TGACGC|TCACGC|GAACGC|CAACGC|AAACGC|TAACGT|TAACGG|TAACGA|TAACTC|TAACCC|TAACAC|TAATGC|TAAGGC|TAAAGC)(?:TAACGC|TATCGC|TAGCGC|TACCGC|TTACGC|TGACGC|TCACGC|GAACGC|CAACGC|AAACGC|TAACGT|TAACGG|TAACGA|TAACTC|TAACCC|TAACAC|TAATGC|TAAGGC|TAAAGC)[ACGT]))


close INPUT;

close OUT_G;
close OUT_C;
close OUT_mix;
close OUT_other;
